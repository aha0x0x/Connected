<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>code.aha</groupId>
  <artifactId>Connected</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>
  
  <description>Solution for coding challange: 

  Suppose you are given a text file containing pairs of city names, one pair per line, with the names on each line separated by a comma. The file might look something like:
  Philadelphia, Pittsburgh
  Boston, New York
  Hartford, New York
  Los Angeles, San Diego
  New York, Croton-Harmon
  St. Petersburg, Tampa
  Each line of the file indicates that it is possible to travel between the two cities named. (More formally, if we think of the cities as nodes in a graph, each line of the file specifies an edge between two nodes.) In the example above it is possible to travel between Boston and New York, and also between Hartford and New York, so it follows that Boston and Hartford are connected. On the other hand, there is no path between Boston and Tampa, so they are not connected.
  Write a java program, called
  Connected
  , that reads in such a file and outputs whether two specified cities are connected. The program will be invoked from the command line as:

  java Connected &lt;filename&gt; &lt;cityname1&gt; &lt;cityname2&gt;

  and will output a single line stating
  yes or no

  &gt; java Connected cities.txt Boston Hartford
  yes
  &gt; java Connected cities.txt Boston Tampa
  no
  &gt; java Connected cities.txt Boston Ypsilanti
  no
   Commas will not appear within city names in the file. For example, &quot;Washington, D.C.&quot;
  will not appear in the file as a city name.
   Your choice of algorithms and data structures should allow the program to handle
  arbitrarily large files reasonably efficiently. You can, however, assume that the file will
  fit in memory.
   The program is permitted to return any or no output when given a malformed input file or
  malformed command line; however it should not crash or otherwise terminate
  abnormally.
   The file is considered to be a list of all connections, not all cities; a city not in the file is
  connected to no other city.
   Please let us know how to build it (e.g. supply a Makefile) so that we can build and test it
  ourselves.
   Multiple source files should be tarred/zipped together.
  </description>


  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-jar-plugin</artifactId>
	<version>3.0.2</version>
	<configuration>
	  <archive>
	    <manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
	  </archive>
	</configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
    </dependency>
  </dependencies>
</project>
